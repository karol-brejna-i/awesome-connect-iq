# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Deploy Nuxt site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

defaults:
  run:
    working-directory: "webapp/awesomer"

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Dump GitHub Workspace
        env:
          GHW: ${{ github.workspace }}
        run: |
          pwd && ls -la && echo "$GHW"

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            exit 0
          elif [ -f "package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: "webapp/awesomer"

      - name: n1
        env:
          GHW: ${{ github.workspace }}
        run: |
          pwd && ls -la && cat nuxt.config.js

      - name: Setup Pages
        uses: actions/configure-pages@v2
        with:
          # NOTE: by default, this little jerk works in GITHUB_WORKSPACE directory and does not take into account working-directory setting.
          # If you nuxt project is in different directory (subdirectory), it will end up with creating a new blank config in GITHUB_WORKSPACE...
          # You need to use configurationFile parameter
          static_site_generator: nuxt
          generator_config_file: webapp/awesomer/nuxt.config.js

      - name: n2
        env:
          GHW: ${{ github.workspace }}
        run: |
          pwd && ls -la && cat nuxt.config.js

      - name: n3
        env:
          GHW: ${{ github.workspace }}
        run: |
          pwd && echo $GITHUB_WORKSPACE && ls -la $GITHUB_WORKSPACE

      # - name: Restore cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       dist
      #       .nuxt
      #     key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nuxt-build-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: ls node modules
        run: pwd && ls node_modules

      - name: Static HTML export with Nuxt
        run: pwd && ${{ steps.detect-package-manager.outputs.manager }} run generate
        working-directory: "webapp/awesomer"

      - name: d2
        run: pwd && ls dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: webapp/awesomer/dist



  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
